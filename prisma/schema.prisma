// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
  output        = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String       @id @default(uuid()) @db.Uuid
  name      String
  email     String       @unique
  role      Role         @default(USER)
  teams     TeamMember[]
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")

  @@map("users")
}

model Team {
  id          String       @id @default(uuid()) @db.Uuid
  name        String
  description String?
  members     TeamMember[]
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")

  @@map("teams")
}

// Join table for the many-to-many relationship between User and Team
model TeamMember {
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @map("user_id") @db.Uuid
  team      Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId    String   @map("team_id") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")

  @@id([userId, teamId])
  @@index([userId])
  @@index([teamId])
  @@map("team_members")
}
