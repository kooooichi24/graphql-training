"""
This object represents a team.
"""
type Team {
  """
  The identifier of the team.
  """
  id: UUID!

  """
  The name of the team.
  """
  name: NonEmptyString!

  """
  The description of the team.
  """
  description: String

  """
  The members of the team.
  """
  members(
    """
    The number of items to forward paginate (used with after).
    """
    first: NonNegativeInt!

    """
    The cursor to start the pagination from.
    """
    after: String
  ): UserConnection!
}

type TeamEdge {
  node: Team!
  cursor: String!
}

type TeamConnection {
  edges: [TeamEdge!]!
  pageInfo: PageInfo!
}

type Query {
  """
  Returns a list of teams.
  """
  teams(
    """
    The number of items to forward paginate (used with after).

    Maximum: 500
    """
    first: NonNegativeInt!

    """
    The cursor to start the pagination from.
    """
    after: String
  ): TeamConnection!

  """
  Returns a team by ID.
  """
  team(
    """
    The identifier of the team.
    """
    id: UUID!
  ): Team
}

type Mutation {
  createTeam(name: NonEmptyString!, description: String): Team!
  updateTeam(id: UUID!, name: NonEmptyString, description: String): Team
  deleteTeam(id: UUID!): Team
}
