type User {
  id: UUID!
  name: NonEmptyString!
  email: EmailAddress!
  teams: [Team!]!
}

type UserEdge {
  node: User!
  cursor: String!
}

type UserConnection {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

type Query {
  users(first: NonNegativeInt!, after: String): UserConnection!
  user(id: UUID!): User
}

type Mutation {
  createUser(name: NonEmptyString!, email: EmailAddress!, teamId: UUID): User!
  updateUser(id: UUID!, name: NonEmptyString, email: EmailAddress, teamId: UUID): User
  deleteUser(id: UUID!): User

  addUserToTeam(userId: UUID!, teamId: UUID!): User!
  removeUserFromTeam(userId: UUID!, teamId: UUID!): User!
}
